# dcape-app-nginx-sample Makefile
# Static site served by nginx
SHELL  = /bin/sh
CFG   ?= .env
DOT   := .
DASH  := -

IMAGE_VER       ?= 1.19.4-alpine
APP_SITE        ?= host.dev.lan
APP_TAG         ?= $(subst $(DOT),$(DASH),$(APP_SITE))
USE_TLS         ?= false
APP_ACME_DOMAIN ?= $(APP_SITE)
APP_ROOT        ?= $(PWD)
DCAPE_TAG       ?= dcape
DCAPE_NET       ?= dcape
DC_VER          ?= latest

# ------------------------------------------------------------------------------
# .env template
define CONFIG_DEF
# project config file, generated by make config

# website host
APP_SITE=$(APP_SITE)

# Unique traefik router name
# Container name prefix
APP_TAG=$(APP_TAG)

# Use TLS (true|false)
USE_TLS=$(USE_TLS)

# Certificate domain (www.APP_SITE or *.APP_SITE)
APP_ACME_DOMAIN=www.$(APP_ACME_DOMAIN)

# nginx image version
IMAGE_VER=$(IMAGE_VER)

endef
export CONFIG_DEF

# -----------------------------------------------------------------------------

-include $(CFG)
export

.PHONY: all up down setup start-hook stop dcrun help

all: help

# -----------------------------------------------------------------------------

## container: (re)start
up:
up: CMD=up --force-recreate -d
up: dc

## container: stop (and remove)
down:
down: CMD=rm -f -s
down: dc

# -----------------------------------------------------------------------------
# dcape v1 deploy targets

start-hook: CMD=up -d
start-hook: dc
	@echo "*** $@ ***"

stop: down
	@echo "*** $@ ***"

# git pull is enough here
update:
	@echo "*** $@ ***"

# ------------------------------------------------------------------------------

# $$PWD usage allows host directory mounts in child containers
# Thish works if path is the same for host, docker, docker-compose and child container
## run $(CMD) via docker-compose
dc: docker-compose.yml
	@docker run --rm  -i \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v $$PWD:$$PWD -w $$PWD \
  -e DCAPE_TAG -e DCAPE_NET -e APP_ROOT \
  docker/compose:$$DC_VER \
  -p $$APP_TAG --env-file $(CFG) \
  $(CMD)

## Generate config sample
config: $(CFG).sample

$(CFG).sample:
	@echo "*** $@ ***"
	@echo "$$CONFIG_DEF" > $@

help:
	@grep -A 1 "^##" Makefile | less

##
## Press 'q' for exit
##
